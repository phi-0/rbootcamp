install.packages("h2o")
library(h2o)
h2o.init()
install.packages(c("backports", "RcppArmadillo", "rlang", "sf", "tibble", "tinytex", "vctrs"))
## creating a data frame
v.participant.name <- c("Max", "Tony MÃ¼ller", "Andreas", "Ramona", "Nick Q.")
v.age <- c(17, 23, 45, 11, 44)
v.minor.YES <- c(TRUE, FALSE, FALSE, TRUE, FALSE)
##
d.test <- data.frame(v.participant.name, v.age, v.minor.YES)
d.test
View(d.test)
install.packages(c("backports", "conquer", "dplyr", "DT", "fs", "glue", "jsonlite", "MASS", "nlme", "processx", "RcppArmadillo", "rvest", "showtext", "SQUAREM", "systemfonts", "tidyr", "TTR", "vctrs", "xfun"))
iris
library(dplyr)
iris %>% filter(Species = c('versicolor','virginica'))
iris %>% filter(Species == c('versicolor','virginica'))
library(readxl)
library(ggplot2)
library(lubridate)
library(here)
library(scales)
library(dplyr)
library(plotly)
require(webshot)
require(knitr)
here('Group_Work')
here('Group_Work')
here()
setwd(here())
opts_knit$set(root.dir = here())
setwd("G:/Dev/DataScience/RBootcamp/Group_Work/scripts")
data <- readRDS('../db/data.RDS')
head(data)
# creating an aggregated dataframe with rental counts per hour and season
data.acc <- data %>%
group_by(Hour, Season) %>%
summarise(SumRentCount = sum(RentCount))
# load packages
library(readxl)
library(ggplot2)
library(lubridate)
library(here)
library(scales)
library(dplyr)
library(plotly)
library(boot)
library(webshot)
library(DT)
library(IRdisplay)
library(gifski) # used to create gif of animated graph
require(knitr)
# creating an aggregated dataframe with rental counts per hour and season
data.acc <- data %>%
group_by(Hour, Season) %>%
summarise(SumRentCount = sum(RentCount))
head(data.acc)
# adding frame information to each element in the data frame. Each frame needs cumalitive information (so info for this frame and all previous frames)
lvls <- plotly:::getLevels(data.acc$Hour)
seq <- seq_along(lvls)
data.acc$frame <- seq[data.acc$Hour+1]
data.acc2 <- data.acc[0,]
for (i in 1:max(seq)){
data.update <- data.acc[data.acc$frame %in% 1:i,]
data.update$frame <- i
data.acc2 <- rbind(data.acc2, data.update)
}
# implementing an interactive, animated line plot showing the development per hour over the different seasons
fig3 <- data.acc2 %>%
plot_ly(
x = ~Hour,
y = ~SumRentCount,
frame = ~frame,
#color = ~Season,
split = ~Season,
type = 'scatter',
#mode = 'lines',
line = list(simplyfy = FALSE)
)
fig3 <- fig3 %>% layout(
xaxis = list(
title = "Hour",
zeroline = FALSE
),
yaxis = list(
title = "Aggregated Rent Count",
zeroline = FALSE
)
)
fig3 <- fig3 %>% animation_opts(
frame = 100,
transition = 0,
redraw = FALSE
)
fig3 <- fig3 %>% animation_slider(
hide = FALSE
)
fig3 <- fig3 %>% animation_button(
x = 1, xanchor = "right", y = 0, yanchor = "bottom"
)
fig3 <- fig3 %>% layout(autosize = FALSE, width = 1000, height = 600, margin = list(l=50, r=10, b=10, t=10, pad=1))
#htmlwidgets::saveWidget(fig3, 'fig3.html')
fig3
detach("package:IRdisplay", unload = TRUE)
unlink('RBootcamp_Analysis_Rental_Bikes_cache', recursive = TRUE)
knit_with_parameters('G:/Dev/DataScience/RBootcamp/Group_Work/scripts/RBootcamp_Analysis_Rental_Bikes.rmd', encoding = 'UTF-8')
